{

    // Global configs
    "agent_name" : "",
    
    "log_level"         : 0,                                                    // 0 to 5
    "log_target"        : ["all"],                                              // all, stdout or file
    "log_rotate_size"   : "",
    "log_rotate_time_s" : "",
    "log_directory"     : "",

    "backup_directory" : "",
    "encrypt_backup"   : false,


    // Configure all the input plugins and source points here with a unique ID
    // Mention the type of input channel (with other details) and content type 
    // as well.
    "inputs" : 
    {
        "lameboi" : 
        {
            "target_type" : "http",
            
            "http_address" : "http://localhost:8089",
            "http_reqtype" : "GET",                                             // PUT, PUSH
            "http_reqbody" : "",
            "http_token"   : "",

            "poll_rate"    : "1s",                                              // ns, us, ms, s & m
            "poll_variance": "3s",                                              // So actual polling time will be 1 to 4s
            "timeout"      : "6s",
            
            "content_type" : "json"                                             // json, csv and xml 
        },

        "saneboi" : 
        {
            "channel_type" : "mqtt",

            "mqtt_address" : "http://localhost:1884",
            "mqtt_topic"   : "",
            "mqtt_qos"     : 0,                                                 // 0, 1 or 2
            "mqtt_username": "",
            "mqtt_password": "",
            
            "content_type" : "csv"
        }
    },


    // Here create a filter on different content types and name them wth unique
    // IDs
    "filters" : 
    {
        "json_filter_1" :
        {
            // Select the type of content this filter will expect
            "content_type" : "json",

            // list the json keys (base and nested) that we need to filter out.
            // - See we are pulling the value of a nested key 'peach', from the
            // base key 'subject'. This is useful for JSON objects.
            // - See we are pulling the item number 3 (at index 2) in the json
            // array 'case'. This is useful for JSON arrays. 
            "keys" : ["name", "address", "subject > peach", "case : 2"]
        },

        "json_filter_2" : 
        {
            "content_type" : "json", 
            "keys" : ["name", "address", "case : 3"]
        },

        "csv_filter_1" : 
        {
            "content_type" : "csv",
            "keys" : [0, 1, 2, 3, 6, 9]                                         // CSV column numbers starting from 0
        }
    },


    //
    "processors" : {},


    // Configure all the output plugins and target points here with a unique ID.
    // Mention all the type of output channels (with other details)
    "outputs" : 
    {
        "gameboi" : 
        {
            "target_type" : "influxdb",

            "influx_address"  : "http://localhost:8086",
            "influx_org"      : "curio",
            "influx_bucket"   : "forensic",
            "influx_username" : "admin",
            "influx_password" : "admin",
            "influx_token"    : "214151593201",

            "influx_measurement" : "turbo",
            "influx_timestamp": "auto",

            "write_rate" : "2s",
            "write_rate_variance" : "1s",
            "timeout"      : "1s"
        },

        "painboi" : 
        {
            "target_type" : "influxdb",

            "influx_address"  : "http://localhost:8086",
            "influx_org"      : "curio",
            "influx_bucket"   : "larsenic",
            "influx_username" : "admin",
            "influx_password" : "admin",
            "influx_token"    : "214151593201",

            "influx_measurement" : "larsen",
            "influx_timestamp": "auto",

            "write_rate" : "3s",
            "write_rate_variance" : "1s",
            "timeout"      : "1s"
        },

        "gainboi" : 
        {
            "target_type" : "mqtt",

            "mqtt_address" : "http://localhost:24512",
            "mqtt_topic"   : "",
            "mqtt_qos"     : 0,                                                 // 0, 1 or 2
            "mqtt_username": "",
            "mqtt_password": "",

            "write_rate" : "1s",
            "write_rate_variance" : "3s",
            "write_timeout" : "2s"
        }
    },


    // ..
    "pipelines" : 
    {
        "pipe_1" : 
        {
            "input"  : "lameboi",
            "filter" : "json_filter_1",
            "processor" : "",
            "outputs" : ["gameboi", "gainboi"],

            "isolated" : false
        },

        "pipe_2" : 
        {
            "input" : "lameboi",
            "filter" : "json_filter_2",
            "processor" : "",
            "outputs" : ["painboi"],

            "isolated" : false
        },

        "pipe_3" : 
        {
            "input" : "saneboi",
            "filter" : "csv_filter_1",
            "processor" : "",
            "outputs" : ["gainboi"],

            "isolated" : true
        }
    }
}